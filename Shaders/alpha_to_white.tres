[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://cew0ar1d4pxal"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cy52a"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ski8e"]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_2q160"]
size = Vector2(500, 260)
expression = "if (tex.w < 1.0) {
	color = vec4(1.0,1.0,1.0,1.0);
} else {
	color = tex;
}"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		if (n_out3p0.w < 1.0) {
			n_out5p0 = vec4(1.0,1.0,1.0,1.0);
		} else {
			n_out5p0 = n_out3p0;
		}
	}


// Output:0
	COLOR.rgb = vec3(n_out5p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(900, 80)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_cy52a")
nodes/fragment/2/position = Vector2(-380, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_ski8e")
nodes/fragment/3/position = Vector2(40, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_2q160")
nodes/fragment/5/position = Vector2(340, 80)
nodes/fragment/5/size = Vector2(500, 260)
nodes/fragment/5/input_ports = "0,5,tex;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "if (tex.w < 1.0) {
	color = vec4(1.0,1.0,1.0,1.0);
} else {
	color = tex;
}"
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 5, 0, 5, 0, 0, 0)
